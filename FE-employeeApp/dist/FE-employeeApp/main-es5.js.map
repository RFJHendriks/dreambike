{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/content/content.component.ts","webpack:///src/app/components/content/content.component.html","webpack:///src/app/dialogs/login-dialog.ts","webpack:///src/app/dialogs/loginDialog.component.html","webpack:///src/app/router/app-routing.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/material-module.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","declarations","imports","entryComponents","providers","bootstrap","AppComponent","dialog","loggedIn","title","dialogRef","open","panelClass","width","height","afterClosed","subscribe","console","log","selector","templateUrl","styleUrls","ContentComponent","MyErrorStateMatcher","control","form","invalid","dirty","touched","LoginDialog","matcher","loginForm","username","pattern","required","password","close","value","onConfirm","onNoClick","routes","AppRoutingModule","forRoot","environment","production","bootstrapModule","err","error","MaterialModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialModule } from '../material-module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './router/app-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AppComponent } from './components/app.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ContentComponent } from '../app/components/content/content.component';\r\nimport { LoginDialog } from './dialogs/login-dialog';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ContentComponent, LoginDialog],\r\n  imports: [\r\n    BrowserModule,\r\n    MaterialModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    FlexLayoutModule\r\n  ],\r\n  entryComponents: [LoginDialog],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginDialog } from '../dialogs/login-dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(public dialog: MatDialog) {}\r\n  loggedIn = false;\r\n  title = 'Dreambike';\r\n\r\n  onLogout(): void {\r\n    this.loggedIn = false;\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(LoginDialog, {\r\n      panelClass: 'dialog',\r\n      width: '350px',\r\n      height: '300px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.loggedIn = true;\r\n      console.log('login is gesloten');\r\n    });\r\n  }\r\n}\r\n","<mat-sidenav-container style=\"color: black;\">\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <div fxHide.gt-xs>\r\n        <button mat-icon-button>\r\n          <mat-icon>menu</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <img\r\n          style=\"height: 50px;\"\r\n          alt=\"DreambikeLogo\"\r\n          src=\"assets/logo zonder text 2.png\"\r\n        />\r\n        <span class=\"label\" style=\"padding-left: 15px;\">\r\n          DreamBike Employee Application\r\n        </span>\r\n      </div>\r\n      <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs>\r\n        <ul fxLayout fxLayoutGap=\"20px\" class=\"navigation-items\">\r\n          <li *ngIf=\"!loggedIn\">\r\n            <a (click)=\"openDialog()\">\r\n              <mat-icon class=\"icon\">input</mat-icon>\r\n              <a class=\"label\">Login</a>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <mat-icon class=\"icon\">home</mat-icon>\r\n              <a class=\"label\">Home</a>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <mat-icon class=\"icon\">dashboard</mat-icon>\r\n              <a class=\"label\">Dashboard</a>\r\n            </a>\r\n          </li>\r\n          <li *ngIf=\"loggedIn\">\r\n            <a (click)=\"onLogout()\">\r\n              <mat-icon class=\"icon\">input</mat-icon>\r\n              <a class=\"label\">LogOut</a>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </mat-toolbar>\r\n    <main></main>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<router-outlet class=\"content\"></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>content works!</p>\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormGroupDirective,\r\n  NgForm,\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    return !!(control && control.invalid && (control.dirty || control.touched));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'login-dialog',\r\n  templateUrl: './loginDialog.component.html',\r\n})\r\nexport class LoginDialog {\r\n  matcher = new MyErrorStateMatcher();\r\n  loginForm = new FormGroup({\r\n    username: new FormControl('', [\r\n      Validators.pattern('[0-9a-zA-Z]*'),\r\n      Validators.required,\r\n    ]),\r\n    password: new FormControl('', Validators.required),\r\n  });\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginDialog>) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirm(loginForm) {\r\n    if (loginForm.value.username != '' || loginForm.value.password != '') {\r\n      console.log(loginForm);\r\n    } else {\r\n      return;\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n  <p>\r\n    Login\r\n  </p>\r\n  <form formGroup=\"loginForm\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        maxlength=\"50\"\r\n        placeholder=\"Username\"\r\n        formControlName=\"username\"\r\n        required\r\n        [errorStateMatcher]=\"matcher\"\r\n      />\r\n      <mat-hint>What is your username?</mat-hint>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        type=\"password\"\r\n        maxlength=\"255\"\r\n        placeholder=\"Password\"\r\n        formControlName=\"password\"\r\n        required\r\n        [errorStateMatcher]=\"matcher\"\r\n      />\r\n      <mat-hint>What is your password?</mat-hint>\r\n    </mat-form-field>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onConfirm(loginForm)\" cdkFocusInitial>\r\n    Login\r\n  </button>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n"]}